---
title: "Progress Memo 2"
subtitle: |
  | Final Project 
  | Data Science 2 with R (STAT 301-2)
author: "Chiemela Onuoha"
pagetitle: "PM2 Chiemela Onuoha"
date: "today"

format:
  html:
    toc: true
    toc-depth: 4
    toc-location: left
    embed-resources: true
    link-external-newwindow: true

execute:
  warning: false

from: markdown+emoji
reference-location: margin
citation-location: margin
---


```{r}
#| echo: false
#| label: load-packages-data

library(tidyverse)
library(tidymodels)
library(DT)
library(here)

# resolve conflicts
tidymodels_prefer()

load(here("data/movies_train.rda"))
load(here("recipes/movies_recipe.rda"))

```

::: {.callout-tip icon=false}

## Github Repo Link

[Chiemela's Github (chiemelaonu)](https://github.com/stat301-2-2025-winter/final-project-2-chiemelaonu.git)

:::

## Data source

[Kaggle.com](https://www.kaggle.com/datasets/ashpalsingh1525/imdb-movies-dataset/data)
Data was sourced from Kaggle.com, a site hosting thousands of datasets for the public to use. Accessed February 3rd, 2025^[The Kaggle data was compiled from IMDB.com]

## Analysis Plan
My data has been split and my recipes have also been defined. I have so far defined and fit the baseline, the OLS model, and I have tuned and fit the Elastic Net models. I do plan on defining and fitting a Random Forest model and one other model as well, but I not been able to decide on which final model I want to use. I plan to figure that out by the time this memo is due or shortly thereafter. For my assessment metrics, I plan to analyze RMSE, MAE, and R-squared. 


### Load Data 
```{r}
#| echo: false
laod(here("data/movies_train.rda"))
load(here("data/movies_test.rda"))

```

### Set Seed 
```{r}
set.seed(17382015)

```


### Baseline Model
```{r}
#| label: fit-predict-baseline
#| echo: false

# define baseline model ----
baseline_spec <- linear_reg() |>
  set_engine("lm") |>
  set_mode("regression")

# workflow ----
baseline_workflow <- workflow() |>
  add_model(baseline_spec) |>
  add_recipe(null_recipe)

# fit model ----
baseline_fit <- fit(baseline_workflow, data = movies_train)

tidy(baseline_fit)


# predictions and rmse ----
baseline_predictions <- predict(baseline_fit, new_data = movies_test) |>
  bind_cols(movies_test)

baseline_rmse <- baseline_predictions |>
  rmse(truth = yeo_revenue, estimate = .pred)
```

### OLS Model
```{r}
#| label: fit-ols
#| echo: false

# define model spec ----
lm_spec <- linear_reg() |>
  set_engine("lm") |>
  set_mode("regression")

# define workflow ----
lm_wflow <- workflow() |>
  add_model(lm_spec) |>
  add_recipe(movies_recipe)


# fit workflow ----
lm_fit <- fit(lm_wflow, movies_train)

# save results ----
save(lm_fit, file = here("results/lm_fit.rda"))

# predictions and rmse ----
lm_predictions <- predict(lm_fit, new_data = movies_test) |>
  bind_cols(movies_test)

lm_rmse <- lm_predictions |>
  rmse(truth = yeo_revenue, estimate = .pred)

```


### Fitted Results
```{r}
load(here("results/baseline_fit.rda"))
load(here("results/lm_fit.rda"))

# tibble(
#   Term = tidy(lm_fit) |> pull(term),
#   OLS = round(tidy(lm_fit) |> pull(.pred), 4),
#   Baseline = round(tidy(baseline_fit) |> pull(.pred), 4)
# ) |>
#   knitr::kable()


```



